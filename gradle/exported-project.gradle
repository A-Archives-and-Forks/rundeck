import java.util.regex.Matcher

apply from: "${rootDir}/gradle/java.gradle"

apply plugin: 'signing'
apply plugin: 'java-library'
apply plugin: 'maven-publish'

def archiveName = project.name


if (! archiveName.startsWith('rundeck'))
    archiveName = "rundeck-${project.name}"
else if (archiveName.startsWith('rundeckapp'))
    archiveName = project.name.replace('rundeckapp', 'rundeck')


tasks.register('removeExisting') {
    it.doLast {
        delete("${buildDir}/existing")
    }
}

tasks.register('copyExisting') {
    it.dependsOn removeExisting

    it.inputs.dir 'build/libs'
    it.inputs.dir 'build/poms'
    it.outputs.dir 'build/existing'

    it.doLast {

        copy {
            from "build/libs"
            from "build/poms"
            into "build/existing"
            exclude "*.original"
            rename { file ->
                if (file =~ /^pom/)
                    return "$project.name-${version}.pom"
            }
        }
    }
}

/** Loads configuration.existing with the existing artifacts */
tasks.register('registerExisting') {
    it.dependsOn copyExisting
    it.inputs.dir 'build/existing'

    it.doLast {
        file("build/existing").eachFile {f ->
            println(f)
            artifacts {
                existing file: f, name: archiveName
            }
        }
    }
}



java {
    withJavadocJar()
    withSourcesJar()
}

