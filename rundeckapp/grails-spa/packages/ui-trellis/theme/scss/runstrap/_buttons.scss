//
// Buttons
// --------------------------------------------------


// Base styles
// --------------------------------------------------

.btn {
  display: inline-block;
  margin-bottom: 0; // For input.btn
  font-weight: 600;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1.5px solid transparent;
  @include button-size($padding-base-vertical, $padding-base-horizontal, $font-size-base, $line-height-base, $btn-border-radius-base);
  @include user-select(none);

  &,
  &:active,
  &.active {
    &:focus,
    &.focus {
      @include tab-focus;
    }
  }

  &:hover,
  &:focus,
  &.focus {
    color: var(--font-color);
    outline: 0;
    text-decoration: none;
  }

  &:active,
  &.active {
    background-image: none;
    outline: 0;
    @include box-shadow(inset 0 3px 5px rgba(0, 0, 0, .125));
  }

  &.disabled,
  &[disabled],
  &.btn-disabled,
  fieldset[disabled] & {
    cursor: $cursor-disabled;
    @include opacity(.5);
  }

  &#{&}-transparent {
    background-color: transparent;
    // border-color: transparent;
  }

  // &:disabled,
  // &[disabled],
  // &.disabled,
  // &.btn-disabled {
  //   @include opacity(.5);
  // }

  // [converter] extracted a& to a.btn
}

a.btn {
  &.disabled,
  fieldset[disabled] & {
    pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
  }
}


// Alternate buttons
// --------------------------------------------------

.btn-default {
  @include button-variant(--font-color, --font-fill-color, --default-color, --default-states-color, --default-states-color, --default-states-color);
  box-shadow: var(--button-box-shadow);
  &.btn-simple:not(:focus) { box-shadow: unset; }
}
.btn-primary {
  @include button-variant(--font-color, --font-fill-color, --default-color, --default-states-color, --default-states-color, --default-states-color);
  box-shadow: 
    inset 1px 1px 0px var(--default-states-color),
    inset 1px -1px 0px var(--default-states-color),
    inset -1px 1px 0px var(--default-states-color),
    inset -1px -1px var(--default-states-color),
    var(--button-box-shadow);
  &.btn-simple { 
    box-shadow:
      inset 1px 1px 0px var(--default-states-color),
      inset 1px -1px 0px var(--default-states-color),
      inset -1px 1px 0px var(--default-states-color),
      inset -1px -1px var(--default-states-color);
  }
  font-weight: 700;
}
// Success appears as green
.btn-success {
  @include button-variant(--success-color, --font-fill-color, --success-color, --success-states-color, --success-color, --success-light-color);
  background-color: transparent;
  box-shadow: var(--button-box-shadow);
  &.btn-simple { box-shadow: unset; border-color: transparent; }
}
// Info appears as blue-green
.btn-info {
  @include button-variant(--font-fill-color, --font-fill-color, --info-color, --info-states-color, $btn-info-border, --info-light-color);
  box-shadow: var(--button-box-shadow);
  &.btn-simple { box-shadow: unset; }
}
// Warning appears as orange
.btn-warning {
  @include button-variant(--font-fill-color, --font-fill-color, --warning-color, --warning-states-color, $btn-warning-border, --warning-light-color);
  box-shadow: var(--button-box-shadow);
  &.btn-simple { box-shadow: unset; }
}
// Danger and error appear as red
.btn-danger {
  @include button-variant(--font-fill-color, --font-fill-color, --danger-color, --danger-states-color, $btn-danger-border, --danger-light-color);
  box-shadow: var(--button-box-shadow);
  &.btn-simple { box-shadow: unset; }
}

.btn-cta {
  @include button-variant(--font-fill-color, --font-fill-color, --cta-color, --cta-states-color, $btn-danger-border, --cta-light-color);
  box-shadow: var(--button-box-shadow);
  &.btn-simple { box-shadow: unset; }
}


// Link buttons
// -------------------------

// Make a button look and behave like a link
.btn-link {
  font-weight: 400;
  color: var(--link-primary-color);
  border-radius: 0;

  &,
  &:active,
  &.active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:hover,
  &:focus {
    color: var(--primary-highlight-color);
    text-decoration: underline;
    background-color: transparent;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      color: var(--link-disabled-color);
      text-decoration: none;
    }
  }
}


// Button Sizes
// --------------------------------------------------

.btn-lg {
  // line-height: ensure even-numbered height of button next to large input
  @include button-size($padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $btn-border-radius-large);
}
.btn-sm {
  // line-height: ensure proper height of button next to small input
  @include button-size($padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
}
.btn-xs {
  @include button-size($padding-xs-vertical, $padding-xs-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
}


// Block button
// --------------------------------------------------

.btn-block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

.btn,
.navbar .navbar-nav>li>a.btn {
  // border-radius: $border-radius-btn-base;
  box-sizing: border-box;
  border-width: $border-thin;
  font-size: $font-size-base;
  font-weight: 600;

  padding: $padding-base-vertical $padding-base-horizontal;

  @include btn-styles(--default-color, --default-states-color, --font-color, --border-color);
  @include transition($fast-transition-time, linear);

  &:hover,
  &:focus {
    outline: 0 !important;
  }

  &:active,
  &.active,
  .open>&.dropdown-toggle {
    @include box-shadow(none);
    outline: 0 !important;
  }

  &.btn-icon {
    // border-radius: 25px;
    padding: 7px 10px;

    i {
      margin-right: 0px;
    }
  }

  [class*="ti-"] {
    vertical-align: middle;
  }

}

.btn-group .btn+.btn,
.btn-group .btn+.btn-group,
.btn-group .btn-group+.btn,
.btn-group .btn-group+.btn-group {
  margin-left: -2px;

}

.navbar .navbar-nav>li>a.btn.btn-primary,
.btn-cta {
  @include btn-styles(--primary-color, --primary-states-color, --font-fill-color, --primary-color);
}

// Apply the mixin to the buttons
//.btn-default { @include btn-styles(--default-color, --default-states-color); }
.navbar .navbar-nav>li>a.btn.btn-primary,
.btn-primary {
  // @include btn-styles(--btn-default-color, --primary-states-color);
  box-shadow: 
    inset 1px 1px 0px var(--border-color),
    inset 1px -1px 0px var(--border-color),
    inset -1px 1px 0px var(--border-color),
    inset -1px -1px var(--border-color);
  font-weight: 700;
}

.navbar .navbar-nav>li>a.btn.btn-success,
.btn-cta {
  @include btn-styles(--cta-color, --cta-states-color, --font-fill-color, --cta-color);
}

.navbar .navbar-nav>li>a.btn.btn-success,
.btn-success {
  @include btn-styles(--success-color, --success-states-color, --font-fill-color, --success-color);
}

.navbar .navbar-nav>li>a.btn.btn-info,
.btn-info {
  @include btn-styles(--info-color, --info-states-color, --font-fill-color, --info-color);
}

.navbar .navbar-nav>li>a.btn.btn-warning,
.btn-warning {
  @include btn-styles(--warning-color, --warning-states-color, --font-fill-color, --warning-color);
}

.navbar .navbar-nav>li>a.btn.btn-danger,
.btn-danger {
  @include btn-styles(--danger-color, --danger-states-color, --font-fill-color, --danger-color);
}

.btn-neutral {
  @include btn-styles(--white-color, --white-color, --font-fill-color, --danger-color);

  &:hover,
  &:focus {
    color: var(--default-color);

    i {
      color: var(--default-color);
      opacity: 1;
    }
  }

  &:active,
  &.active,
  .open>&.dropdown-toggle {
    background-color: var(--white-color);
    color: var(--default-color);

    i {
      color: var(--default-color);
      opacity: 1;
    }
  }

  &.btn-fill {
    color: var(--default-color);

    i {
      color: var(--default-color);
      opacity: 1;
    }
  }

  &.btn-fill:hover,
  &.btn-fill:focus {
    color: var(--default-states-color);

    i {
      color: var(--default-states-color);
      opacity: 1;
    }
  }
}

.btn {

  &:disabled,
  &[disabled],
  &.disabled,
  &.btn-disabled {
    @include opacity(.5);
  }
}

.btn-disabled {
  cursor: default;
}

.btn-simple {
  // border: var(--none);
  box-shadow: unset;
}

.navbar .navbar-nav>li>a.btn.btn-lg,
.btn-lg {
  @include btn-size($padding-large-vertical, $padding-large-horizontal, $font-size-large, $border-radius-btn-large, $line-height-small);
  font-weight: $font-weight-normal;

  &.btn-icon {
    // border-radius: 30px;
    padding: 9px 16px;
  }
}

.navbar .navbar-nav>li>a.btn.btn-sm,
.btn-sm {
  @include btn-size($padding-small-vertical, $padding-small-horizontal, $font-size-small, $border-radius-btn-small, $line-height-small);

  &.btn-icon {
    padding: 3px 6px;

    .fa {
      line-height: 1.6;
      width: 15px;
    }
  }
}

.navbar .navbar-nav>li>a.btn.btn-xs,
.btn-xs {
  @include btn-size($padding-xs-vertical, $padding-xs-horizontal, $font-size-xs, $border-radius-btn-small, $line-height-small);

  &.btn-icon {
    padding: 1px 5px;

    .fa {
      width: 10px;
    }
  }
}

.navbar .navbar-nav>li>a.btn.btn-wd,
.btn-wd {
  min-width: 140px;
}

.btn-group.select {
  width: 100%;
}

.btn-group.select .btn {
  text-align: left;
}

.btn-group.select .caret {
  position: absolute;
  top: 50%;
  margin-top: -1px;
  right: 8px;
}

.btn-tooltip {
  white-space: nowrap;
}

.buttons-with-margin {
  .btn {
    margin-bottom: 5px;
  }
}

.btn-muted {
  border-color: (--light-gray);
  color: var(--dark-gray);
}

.btn-secondary {
  border-color: var(--medium-gray);
  color: var(--dark-gray);
}
